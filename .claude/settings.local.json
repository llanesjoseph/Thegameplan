{
  "permissions": {
    "allow": [
      "Bash(npm install:*)",
      "Bash(if [ -f .env.local ])",
      "Bash(then echo \"exists\")",
      "Bash(else echo \"not found\")",
      "Bash(fi)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(npm run dev)",
      "Bash(npm run build:*)",
      "Bash(if [ -f service-account.json ])",
      "Bash(then echo \"✅ service-account.json found\")",
      "Bash(else echo \"❌ service-account.json NOT found\")",
      "Bash(then echo \"✅ service-account.json successfully copied and renamed!\")",
      "Bash(else echo \"❌ Something went wrong\")",
      "Bash(node:*)",
      "Bash(cat:*)",
      "Bash(npx firebase deploy:*)",
      "Bash(git reset:*)",
      "mcp__ide__getDiagnostics",
      "Bash(if [ -d \"app/dashboard/admin/curated-gear\" ])",
      "Bash(npx tsc:*)",
      "Bash(firebase deploy:*)",
      "Bash(cmd:*)",
      "Bash(firebase login:*)",
      "Bash(firebase functions:list:*)",
      "Bash(git mv:*)",
      "Bash(npx eslint:*)",
      "Bash(timeout 30 tail -f nul)",
      "Bash(npx playwright test:*)",
      "Bash(if [ -d \".next\" ])",
      "Bash(then rm -rf .next)",
      "Bash(if [ -d \"app/api/admin\" ])",
      "Bash(mkdir:*)",
      "Bash(firebase use:*)",
      "Bash(npx firebase functions:log:*)",
      "Bash(firebase projects:list:*)",
      "Bash(firebase hosting:sites:list:*)",
      "Bash(firebase hosting:channel:list:*)",
      "Bash(git rm:*)",
      "Bash(if [ -f storage.rules ])",
      "Bash(then cat storage.rules)",
      "Bash(else echo \"storage.rules file not found\")",
      "Bash(git restore:*)",
      "Bash(npx vercel:*)",
      "Bash(npm run test:unit:*)",
      "Bash(npm run test:integration:*)",
      "Bash(npx vitest run:*)",
      "Bash(curl:*)"
    ],
    "deny": [],
    "ask": []
  }
}
