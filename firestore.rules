rules_version = '2';

// Firestore Security Rules for Game Plan
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return request.auth != null && 
             request.auth.token.role == role;
    }
    
    function isCreatorOrAdmin() {
      return request.auth != null && 
             (request.auth.token.role == 'creator' || 
              request.auth.token.role == 'admin' || 
              request.auth.token.role == 'superadmin');
    }
    
    function isAdmin() {
      return request.auth != null && 
             (request.auth.token.role == 'admin' || 
              request.auth.token.role == 'superadmin');
    }
    
    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow read: if isAdmin(); // Admins can read all user data
    }
    
    // Public user profiles - readable by all, writable by owner
    match /profiles/{userId} {
      allow read: if true;
      allow write: if isOwner(userId);
      allow write: if isAdmin();
    }
    
    // Contributors/Creators - readable by all, writable by creator/admin
    match /contributors/{contributorId} {
      allow read: if true;
      allow write: if isOwner(contributorId) || isAdmin();
    }
    
    // Gear collection - readable by all, writable by creators/admins
    match /gear/{gearId} {
      allow read: if true;
      allow write: if isCreatorOrAdmin();
      allow create: if isCreatorOrAdmin() && 
                       request.auth.uid == request.resource.data.createdBy;
    }
    
    // Lessons - readable by authenticated users, writable by creators/admins
    match /lessons/{lessonId} {
      allow read: if isAuthenticated();
      allow write: if isCreatorOrAdmin();
      allow create: if isCreatorOrAdmin() && 
                       request.auth.uid == request.resource.data.instructor;
    }
    
    // User progress tracking
    match /progress/{userId} {
      allow read, write: if isOwner(userId);
      allow read: if isAdmin();
    }
    
    // User preferences and settings
    match /preferences/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Creator requests and applications
    match /creator-requests/{requestId} {
      allow read: if isAdmin() || isOwner(resource.data.userId);
      allow create: if isAuthenticated() && 
                       request.auth.uid == request.resource.data.userId;
      allow update: if isAdmin();
    }
    
    // Analytics data - admin only
    match /analytics/{document=**} {
      allow read, write: if isAdmin();
    }
    
    // System configuration - admin only
    match /config/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // AI coaching sessions - user can access their own
    match /coaching-sessions/{sessionId} {
      allow read, write: if isAuthenticated() && 
                            request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && 
                       request.auth.uid == request.resource.data.userId;
    }
    
    // Subscriptions and payments
    match /subscriptions/{userId} {
      allow read, write: if isOwner(userId);
      allow read: if isAdmin();
    }
    
    // Default deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
