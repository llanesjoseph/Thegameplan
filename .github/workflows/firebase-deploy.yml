name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - master
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create environment file
        run: |
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env.local
          echo "NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}" >> .env.local
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env.local

      - name: Build Next.js app for Firebase hosting
        run: npm run build

      - name: Install Firebase Functions dependencies
        run: cd functions && npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Debug and Deploy Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_GAMEPLAN_787A2 }}
        run: |
          echo "Checking if token exists..."
          if [ -z "$FIREBASE_TOKEN" ]; then
            echo "ERROR: FIREBASE_TOKEN is empty!"
            echo "Available secrets (names only):"
            env | grep -E '^[A-Z_]+=' | cut -d= -f1 | sort
            exit 1
          else
            echo "Token found, length: ${#FIREBASE_TOKEN}"
            echo "Using token for Firebase deployment..."
            firebase deploy --project gameplan-787a2 --token "$FIREBASE_TOKEN" --only functions:aiCoaching,hosting
          fi

      - name: Deploy static files to Firebase Hosting using gsutil
        run: |
          gsutil -m rsync -r -d ./out gs://gameplan-787a2.appspot.com
          gsutil -m setmeta -h "Cache-Control:public, max-age=3600" gs://gameplan-787a2.appspot.com/**
